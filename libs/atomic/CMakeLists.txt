
set(PROJECT_NAME boost_atomic)

project(${PROJECT_NAME})

include_directories(${BOOST_INCLUDE_DIR})

#add_definitions(-DBOOST_ATOMIC_SOURCE)

if(BOOST_BUILD_SHARED_LIBS)
	add_definitions(-DBOOST_ATOMIC_DYN_LINK=1)
	add_definitions(-DBOOST_ATOMIC_STATIC_LINK=0)
else()
	add_definitions(-DBOOST_ATOMIC_STATIC_LINK=1)
endif()


set(SOURCE
	src/lockpool.cpp
)

if(WIN32)

	# _WIN32_WINNT 0x0602 Windows 8
	# _WIN32_WINNT 0x0601 Windows 7
	# _WIN32_WINNT 0x0600 Windows Server 2008
	# _WIN32_WINNT 0x0600 Windows Vista
	# _WIN32_WINNT 0x0502 Windows Server 2003
	# _WIN32_WINNT 0x0501 Windows XP
	# _WIN32_WINNT 0x0500 Windows 2000
	add_definitions(-DBOOST_USE_WINDOWS_H)
	add_definitions(-D_WIN32_WINNT=0x0500)

endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${BOOST_LIBRARY_OUTPUT_PATH})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${BOOST_LIBRARY_OUTPUT_PATH})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${BOOST_LIBRARY_OUTPUT_PATH})

add_library(${PROJECT_NAME} ${BOOST_LIBRARY_TYPE} ${SOURCE})

if(WIN32)
	target_link_libraries(${PROJECT_NAME} "kernel32")
endif()

if(MSVC)
	set_target_properties(${PROJECT_NAME} PROPERTIES
		LIBRARY_OUTPUT_DIRECTORY            ${BOOST_LIBRARY_OUTPUT_PATH}
		LIBRARY_OUTPUT_DIRECTORY_DEBUG      ${BOOST_LIBRARY_OUTPUT_PATH}
		LIBRARY_OUTPUT_DIRECTORY_RELEASE    ${BOOST_LIBRARY_OUTPUT_PATH}
		RUNTIME_OUTPUT_DIRECTORY            ${BOOST_LIBRARY_OUTPUT_PATH}
		RUNTIME_OUTPUT_DIRECTORY_DEBUG      ${BOOST_LIBRARY_OUTPUT_PATH}
		RUNTIME_OUTPUT_DIRECTORY_RELEASE    ${BOOST_LIBRARY_OUTPUT_PATH}
		ARCHIVE_OUTPUT_DIRECTORY            ${BOOST_LIBRARY_OUTPUT_PATH}
		ARCHIVE_OUTPUT_DIRECTORY_DEBUG      ${BOOST_LIBRARY_OUTPUT_PATH}
		ARCHIVE_OUTPUT_DIRECTORY_RELEASE    ${BOOST_LIBRARY_OUTPUT_PATH}
	)
else()
	if(WIN32)
		if( ${BOOST_LIBRARY_TYPE} STREQUAL STATIC)
			set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS "-static-libgcc -static-libstdc++")
		else()
			set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS "-shared-libgcc -shared-libstdc++")
		endif()
	endif()
endif()
